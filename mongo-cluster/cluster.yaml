apiVersion: v1
kind: Service
metadata:
  name: mongo-shard
spec:
  clusterIP: None
  ports:
  - port: 27017
    targetPort: 27017
  selector:
    app: mongo-shard
---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: mongo-shard
spec:
  replicas: 2
  volumeClaimTemplates:
    - metadata:
        name: mongo-data
      spec:
        resources:
          requests:
            storage: 1Gi
        accessModes:
          - ReadWriteOnce
  selector:
    matchLabels:
      app: mongo-shard
  serviceName: "mongo-shard"
  template:
    spec:
      containers:
        - name: mongo
          image: mongo
          command:
            - "mongod"
            - "--shardsvr"
            - "--replSet"
            - "mongors"
            - "--bind_ip"
            - "0.0.0.0"
            - "--port"
            - "27017"
          ports:
            - containerPort: 27017
          volumeMounts:
            - mountPath: /data/db
              name: mongo-data
    metadata:
      labels:
        app: mongo-shard
---
apiVersion: v1
kind: Service
metadata:
  name: mongo-config
spec:
  clusterIP: None
  ports:
    - port: 27017
      targetPort: 27017
      name: mongo-config
  selector:
    app: mongo-config
---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: mongo-config
spec:
  replicas: 2
  volumeClaimTemplates:
  - metadata:
      name: mongo-data
    spec:
      resources:
        requests:
          storage: 1Gi
      accessModes:
      - ReadWriteOnce
  selector:
    matchLabels:
      app: mongo-config
  serviceName: "mongo-config"
  template:
    spec:
      containers:
      - name: mongo
        image: mongo
        command:
        - "mongod"
        - "--configsvr"
        - "--replSet"
        - "mongocfg"
        - "--port"
        - "27017"
        - "--bind_ip"
        - "0.0.0.0"
        ports:
        - containerPort: 27017
        volumeMounts:
        - mountPath: /data/db
          name: mongo-data
    metadata:
      labels:
        app: mongo-config

# kubectl exec -it mongo-config-0 -c mongo -- mongo --port 27017 --eval "rs.initiate({_id: \"mongocfg\", configsvr: true, members: [ {_id: 0, host: \"mongo-config-0.mongo-config.default.svc.cluster.local\"}, {_id: 1, host: \"mongo-config-1.mongo-config.default.svc.cluster.local\"} ] });"

# kubectl exec -it mongo-shard-0 -c mongo -- mongo --port 27017 --eval "rs.initiate({_id: \"mongors\", members: [ {_id: 0, host: \"mongo-shard-0.mongo-shard.default.svc.cluster.local\"}, {_id: 1, host: \"mongo-shard-1.mongo-shard.default.svc.cluster.local\"} ] });"

#Shard Operations [Test]
#  use testDb
#  db.createCollection(\"testDb.testCollection\")