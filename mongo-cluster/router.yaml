apiVersion: apps/v1
kind: Deployment
metadata:
  name: mongo-router
spec:
  replicas: 2
  selector:
    matchLabels:
      app: mongo-router
  template:
    metadata:
      labels:
        app: mongo-router
    spec:
      containers:
      - name: mongo
        image: mongo
        command:
        - "mongos"
        - "--port"
        - "27017"
        - "--configdb"
        - "mongocfg/mongo-config-0.mongo-config.default.svc.cluster.local:27017,mongo-config-1.mongo-config.default.svc.cluster.local:27017"
        ports:
        - containerPort: 27017


# kubectl exec -it mongo-router-6b9f5bc5d6-4x4zs -c mongo -- mongo --port 27017 --eval "sh.addShard(\"mongors/mongo-shard-0.mongo-shard.default.svc.cluster.local\");"
# kubectl exec -it mongo-router-6b9f5bc5d6-4x4zs -c mongo -- mongo --port 27017 --eval "sh.addShard(\"mongors/mongo-shard-1.mongo-shard.default.svc.cluster.local\");"
# kubectl exec -it mongo-router-6b9f5bc5d6-4x4zs -c mongo -- mongo --port 27017 --eval "sh.status();"

# Router Operation [Test]
#  sh.enableSharding(\"testDb\")
#  sh.shardCollection(\"testDb.testCollection\", {\"shardingField\" : 1})
#  sh.status();
#  use admin
#  db.admin.runCommand("getShardMap")