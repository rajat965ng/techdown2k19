// Code generated by protoc-gen-go. DO NOT EDIT.
// source: calculator/calcpb/calculator.proto

package calcpb

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type Input struct {
	FirstNum             int64    `protobuf:"varint,1,opt,name=firstNum,proto3" json:"firstNum,omitempty"`
	SecondNum            int64    `protobuf:"varint,2,opt,name=secondNum,proto3" json:"secondNum,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Input) Reset()         { *m = Input{} }
func (m *Input) String() string { return proto.CompactTextString(m) }
func (*Input) ProtoMessage()    {}
func (*Input) Descriptor() ([]byte, []int) {
	return fileDescriptor_f664ca1c5a6f0507, []int{0}
}

func (m *Input) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Input.Unmarshal(m, b)
}
func (m *Input) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Input.Marshal(b, m, deterministic)
}
func (m *Input) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Input.Merge(m, src)
}
func (m *Input) XXX_Size() int {
	return xxx_messageInfo_Input.Size(m)
}
func (m *Input) XXX_DiscardUnknown() {
	xxx_messageInfo_Input.DiscardUnknown(m)
}

var xxx_messageInfo_Input proto.InternalMessageInfo

func (m *Input) GetFirstNum() int64 {
	if m != nil {
		return m.FirstNum
	}
	return 0
}

func (m *Input) GetSecondNum() int64 {
	if m != nil {
		return m.SecondNum
	}
	return 0
}

type Request struct {
	Input                *Input   `protobuf:"bytes,1,opt,name=input,proto3" json:"input,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Request) Reset()         { *m = Request{} }
func (m *Request) String() string { return proto.CompactTextString(m) }
func (*Request) ProtoMessage()    {}
func (*Request) Descriptor() ([]byte, []int) {
	return fileDescriptor_f664ca1c5a6f0507, []int{1}
}

func (m *Request) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Request.Unmarshal(m, b)
}
func (m *Request) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Request.Marshal(b, m, deterministic)
}
func (m *Request) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Request.Merge(m, src)
}
func (m *Request) XXX_Size() int {
	return xxx_messageInfo_Request.Size(m)
}
func (m *Request) XXX_DiscardUnknown() {
	xxx_messageInfo_Request.DiscardUnknown(m)
}

var xxx_messageInfo_Request proto.InternalMessageInfo

func (m *Request) GetInput() *Input {
	if m != nil {
		return m.Input
	}
	return nil
}

type Response struct {
	Result               int64    `protobuf:"varint,1,opt,name=result,proto3" json:"result,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Response) Reset()         { *m = Response{} }
func (m *Response) String() string { return proto.CompactTextString(m) }
func (*Response) ProtoMessage()    {}
func (*Response) Descriptor() ([]byte, []int) {
	return fileDescriptor_f664ca1c5a6f0507, []int{2}
}

func (m *Response) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Response.Unmarshal(m, b)
}
func (m *Response) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Response.Marshal(b, m, deterministic)
}
func (m *Response) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Response.Merge(m, src)
}
func (m *Response) XXX_Size() int {
	return xxx_messageInfo_Response.Size(m)
}
func (m *Response) XXX_DiscardUnknown() {
	xxx_messageInfo_Response.DiscardUnknown(m)
}

var xxx_messageInfo_Response proto.InternalMessageInfo

func (m *Response) GetResult() int64 {
	if m != nil {
		return m.Result
	}
	return 0
}

type MeteoricNumber struct {
	Value                int64    `protobuf:"varint,1,opt,name=value,proto3" json:"value,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *MeteoricNumber) Reset()         { *m = MeteoricNumber{} }
func (m *MeteoricNumber) String() string { return proto.CompactTextString(m) }
func (*MeteoricNumber) ProtoMessage()    {}
func (*MeteoricNumber) Descriptor() ([]byte, []int) {
	return fileDescriptor_f664ca1c5a6f0507, []int{3}
}

func (m *MeteoricNumber) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MeteoricNumber.Unmarshal(m, b)
}
func (m *MeteoricNumber) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MeteoricNumber.Marshal(b, m, deterministic)
}
func (m *MeteoricNumber) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MeteoricNumber.Merge(m, src)
}
func (m *MeteoricNumber) XXX_Size() int {
	return xxx_messageInfo_MeteoricNumber.Size(m)
}
func (m *MeteoricNumber) XXX_DiscardUnknown() {
	xxx_messageInfo_MeteoricNumber.DiscardUnknown(m)
}

var xxx_messageInfo_MeteoricNumber proto.InternalMessageInfo

func (m *MeteoricNumber) GetValue() int64 {
	if m != nil {
		return m.Value
	}
	return 0
}

type PrimeFactor struct {
	Value                int64    `protobuf:"varint,1,opt,name=value,proto3" json:"value,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *PrimeFactor) Reset()         { *m = PrimeFactor{} }
func (m *PrimeFactor) String() string { return proto.CompactTextString(m) }
func (*PrimeFactor) ProtoMessage()    {}
func (*PrimeFactor) Descriptor() ([]byte, []int) {
	return fileDescriptor_f664ca1c5a6f0507, []int{4}
}

func (m *PrimeFactor) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PrimeFactor.Unmarshal(m, b)
}
func (m *PrimeFactor) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PrimeFactor.Marshal(b, m, deterministic)
}
func (m *PrimeFactor) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PrimeFactor.Merge(m, src)
}
func (m *PrimeFactor) XXX_Size() int {
	return xxx_messageInfo_PrimeFactor.Size(m)
}
func (m *PrimeFactor) XXX_DiscardUnknown() {
	xxx_messageInfo_PrimeFactor.DiscardUnknown(m)
}

var xxx_messageInfo_PrimeFactor proto.InternalMessageInfo

func (m *PrimeFactor) GetValue() int64 {
	if m != nil {
		return m.Value
	}
	return 0
}

type NumSeries struct {
	Num                  int64    `protobuf:"varint,1,opt,name=num,proto3" json:"num,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *NumSeries) Reset()         { *m = NumSeries{} }
func (m *NumSeries) String() string { return proto.CompactTextString(m) }
func (*NumSeries) ProtoMessage()    {}
func (*NumSeries) Descriptor() ([]byte, []int) {
	return fileDescriptor_f664ca1c5a6f0507, []int{5}
}

func (m *NumSeries) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_NumSeries.Unmarshal(m, b)
}
func (m *NumSeries) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_NumSeries.Marshal(b, m, deterministic)
}
func (m *NumSeries) XXX_Merge(src proto.Message) {
	xxx_messageInfo_NumSeries.Merge(m, src)
}
func (m *NumSeries) XXX_Size() int {
	return xxx_messageInfo_NumSeries.Size(m)
}
func (m *NumSeries) XXX_DiscardUnknown() {
	xxx_messageInfo_NumSeries.DiscardUnknown(m)
}

var xxx_messageInfo_NumSeries proto.InternalMessageInfo

func (m *NumSeries) GetNum() int64 {
	if m != nil {
		return m.Num
	}
	return 0
}

type SeriesSum struct {
	Num                  int64    `protobuf:"varint,1,opt,name=num,proto3" json:"num,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SeriesSum) Reset()         { *m = SeriesSum{} }
func (m *SeriesSum) String() string { return proto.CompactTextString(m) }
func (*SeriesSum) ProtoMessage()    {}
func (*SeriesSum) Descriptor() ([]byte, []int) {
	return fileDescriptor_f664ca1c5a6f0507, []int{6}
}

func (m *SeriesSum) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SeriesSum.Unmarshal(m, b)
}
func (m *SeriesSum) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SeriesSum.Marshal(b, m, deterministic)
}
func (m *SeriesSum) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SeriesSum.Merge(m, src)
}
func (m *SeriesSum) XXX_Size() int {
	return xxx_messageInfo_SeriesSum.Size(m)
}
func (m *SeriesSum) XXX_DiscardUnknown() {
	xxx_messageInfo_SeriesSum.DiscardUnknown(m)
}

var xxx_messageInfo_SeriesSum proto.InternalMessageInfo

func (m *SeriesSum) GetNum() int64 {
	if m != nil {
		return m.Num
	}
	return 0
}

func init() {
	proto.RegisterType((*Input)(nil), "calculator.Input")
	proto.RegisterType((*Request)(nil), "calculator.Request")
	proto.RegisterType((*Response)(nil), "calculator.Response")
	proto.RegisterType((*MeteoricNumber)(nil), "calculator.MeteoricNumber")
	proto.RegisterType((*PrimeFactor)(nil), "calculator.PrimeFactor")
	proto.RegisterType((*NumSeries)(nil), "calculator.NumSeries")
	proto.RegisterType((*SeriesSum)(nil), "calculator.SeriesSum")
}

func init() { proto.RegisterFile("calculator/calcpb/calculator.proto", fileDescriptor_f664ca1c5a6f0507) }

var fileDescriptor_f664ca1c5a6f0507 = []byte{
	// 320 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x74, 0x92, 0x4d, 0x4b, 0xfb, 0x40,
	0x10, 0xc6, 0x9b, 0x7f, 0x69, 0xff, 0xed, 0x14, 0xc4, 0xae, 0x55, 0x4b, 0x50, 0x90, 0x15, 0xb4,
	0xa7, 0x56, 0xe2, 0xd9, 0x83, 0x2f, 0x08, 0x1e, 0x2c, 0x92, 0xdc, 0xbc, 0xa5, 0xeb, 0x08, 0x0b,
	0xd9, 0x6c, 0xdc, 0x97, 0x7e, 0x59, 0xbf, 0x8c, 0x6c, 0x36, 0x6c, 0xb7, 0x88, 0xb7, 0x99, 0xe7,
	0x79, 0x32, 0x93, 0xdf, 0x32, 0x40, 0x59, 0x59, 0x31, 0x5b, 0x95, 0x46, 0xaa, 0x95, 0x2b, 0x9b,
	0xcd, 0x6a, 0xa7, 0x2c, 0x1b, 0x25, 0x8d, 0x24, 0xb0, 0x53, 0xe8, 0x3d, 0x0c, 0x5e, 0xea, 0xc6,
	0x1a, 0x92, 0xc2, 0xe8, 0x93, 0x2b, 0x6d, 0xd6, 0x56, 0xcc, 0x93, 0x8b, 0x64, 0xd1, 0xcf, 0x43,
	0x4f, 0xce, 0x60, 0xac, 0x91, 0xc9, 0xfa, 0xc3, 0x99, 0xff, 0x5a, 0x73, 0x27, 0xd0, 0x0c, 0xfe,
	0xe7, 0xf8, 0x65, 0x51, 0x1b, 0x72, 0x0d, 0x03, 0xee, 0xa6, 0xb5, 0x13, 0x26, 0xd9, 0x74, 0x19,
	0xed, 0x6e, 0xd7, 0xe4, 0xde, 0xa7, 0x14, 0x46, 0x39, 0xea, 0x46, 0xd6, 0x1a, 0xc9, 0x09, 0x0c,
	0x15, 0x6a, 0x5b, 0x99, 0x6e, 0x6f, 0xd7, 0xd1, 0x2b, 0x38, 0x78, 0x45, 0x83, 0x52, 0x71, 0xb6,
	0xb6, 0x62, 0x83, 0x8a, 0xcc, 0x60, 0xb0, 0x2d, 0x2b, 0x8b, 0x5d, 0xd0, 0x37, 0xf4, 0x12, 0x26,
	0x6f, 0x8a, 0x0b, 0x7c, 0x2e, 0x99, 0x91, 0x7f, 0x85, 0xce, 0x61, 0xbc, 0xb6, 0xa2, 0x40, 0xc5,
	0x51, 0x93, 0x43, 0xe8, 0xd7, 0x01, 0xd3, 0x95, 0xce, 0xf6, 0x5e, 0x61, 0xc5, 0x6f, 0x3b, 0xfb,
	0x4e, 0x60, 0xfa, 0x18, 0x50, 0x0a, 0x54, 0x5b, 0xce, 0x90, 0x64, 0xd0, 0x77, 0xf1, 0xa3, 0x98,
	0xb2, 0x7b, 0x89, 0x74, 0xb6, 0x2f, 0x7a, 0x54, 0xda, 0x23, 0x05, 0xcc, 0xdb, 0x9f, 0xf5, 0x44,
	0x4f, 0xc8, 0xa4, 0x68, 0xa4, 0xe6, 0x86, 0xcb, 0x9a, 0xa4, 0xf1, 0x37, 0xfb, 0xe8, 0xe9, 0x69,
	0xec, 0x45, 0xb8, 0xb4, 0x77, 0x93, 0x90, 0x3b, 0x18, 0x17, 0x01, 0xee, 0x38, 0x4e, 0x06, 0xe6,
	0x74, 0x4f, 0x0e, 0xac, 0xb4, 0xb7, 0x48, 0x1e, 0x46, 0xef, 0x43, 0x7f, 0x2a, 0x9b, 0x61, 0x7b,
	0x20, 0xb7, 0x3f, 0x01, 0x00, 0x00, 0xff, 0xff, 0x64, 0xd5, 0x0d, 0x7a, 0x46, 0x02, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// CalculatorServiceClient is the client API for CalculatorService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type CalculatorServiceClient interface {
	Sum(ctx context.Context, in *Request, opts ...grpc.CallOption) (*Response, error)
	PrimeNumberDecomposition(ctx context.Context, in *MeteoricNumber, opts ...grpc.CallOption) (CalculatorService_PrimeNumberDecompositionClient, error)
	SumSeries(ctx context.Context, opts ...grpc.CallOption) (CalculatorService_SumSeriesClient, error)
}

type calculatorServiceClient struct {
	cc *grpc.ClientConn
}

func NewCalculatorServiceClient(cc *grpc.ClientConn) CalculatorServiceClient {
	return &calculatorServiceClient{cc}
}

func (c *calculatorServiceClient) Sum(ctx context.Context, in *Request, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/calculator.CalculatorService/Sum", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *calculatorServiceClient) PrimeNumberDecomposition(ctx context.Context, in *MeteoricNumber, opts ...grpc.CallOption) (CalculatorService_PrimeNumberDecompositionClient, error) {
	stream, err := c.cc.NewStream(ctx, &_CalculatorService_serviceDesc.Streams[0], "/calculator.CalculatorService/PrimeNumberDecomposition", opts...)
	if err != nil {
		return nil, err
	}
	x := &calculatorServicePrimeNumberDecompositionClient{stream}
	if err := x.ClientStream.SendMsg(in); err != nil {
		return nil, err
	}
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	return x, nil
}

type CalculatorService_PrimeNumberDecompositionClient interface {
	Recv() (*PrimeFactor, error)
	grpc.ClientStream
}

type calculatorServicePrimeNumberDecompositionClient struct {
	grpc.ClientStream
}

func (x *calculatorServicePrimeNumberDecompositionClient) Recv() (*PrimeFactor, error) {
	m := new(PrimeFactor)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func (c *calculatorServiceClient) SumSeries(ctx context.Context, opts ...grpc.CallOption) (CalculatorService_SumSeriesClient, error) {
	stream, err := c.cc.NewStream(ctx, &_CalculatorService_serviceDesc.Streams[1], "/calculator.CalculatorService/SumSeries", opts...)
	if err != nil {
		return nil, err
	}
	x := &calculatorServiceSumSeriesClient{stream}
	return x, nil
}

type CalculatorService_SumSeriesClient interface {
	Send(*NumSeries) error
	CloseAndRecv() (*SeriesSum, error)
	grpc.ClientStream
}

type calculatorServiceSumSeriesClient struct {
	grpc.ClientStream
}

func (x *calculatorServiceSumSeriesClient) Send(m *NumSeries) error {
	return x.ClientStream.SendMsg(m)
}

func (x *calculatorServiceSumSeriesClient) CloseAndRecv() (*SeriesSum, error) {
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	m := new(SeriesSum)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

// CalculatorServiceServer is the server API for CalculatorService service.
type CalculatorServiceServer interface {
	Sum(context.Context, *Request) (*Response, error)
	PrimeNumberDecomposition(*MeteoricNumber, CalculatorService_PrimeNumberDecompositionServer) error
	SumSeries(CalculatorService_SumSeriesServer) error
}

// UnimplementedCalculatorServiceServer can be embedded to have forward compatible implementations.
type UnimplementedCalculatorServiceServer struct {
}

func (*UnimplementedCalculatorServiceServer) Sum(ctx context.Context, req *Request) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Sum not implemented")
}
func (*UnimplementedCalculatorServiceServer) PrimeNumberDecomposition(req *MeteoricNumber, srv CalculatorService_PrimeNumberDecompositionServer) error {
	return status.Errorf(codes.Unimplemented, "method PrimeNumberDecomposition not implemented")
}
func (*UnimplementedCalculatorServiceServer) SumSeries(srv CalculatorService_SumSeriesServer) error {
	return status.Errorf(codes.Unimplemented, "method SumSeries not implemented")
}

func RegisterCalculatorServiceServer(s *grpc.Server, srv CalculatorServiceServer) {
	s.RegisterService(&_CalculatorService_serviceDesc, srv)
}

func _CalculatorService_Sum_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CalculatorServiceServer).Sum(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/calculator.CalculatorService/Sum",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CalculatorServiceServer).Sum(ctx, req.(*Request))
	}
	return interceptor(ctx, in, info, handler)
}

func _CalculatorService_PrimeNumberDecomposition_Handler(srv interface{}, stream grpc.ServerStream) error {
	m := new(MeteoricNumber)
	if err := stream.RecvMsg(m); err != nil {
		return err
	}
	return srv.(CalculatorServiceServer).PrimeNumberDecomposition(m, &calculatorServicePrimeNumberDecompositionServer{stream})
}

type CalculatorService_PrimeNumberDecompositionServer interface {
	Send(*PrimeFactor) error
	grpc.ServerStream
}

type calculatorServicePrimeNumberDecompositionServer struct {
	grpc.ServerStream
}

func (x *calculatorServicePrimeNumberDecompositionServer) Send(m *PrimeFactor) error {
	return x.ServerStream.SendMsg(m)
}

func _CalculatorService_SumSeries_Handler(srv interface{}, stream grpc.ServerStream) error {
	return srv.(CalculatorServiceServer).SumSeries(&calculatorServiceSumSeriesServer{stream})
}

type CalculatorService_SumSeriesServer interface {
	SendAndClose(*SeriesSum) error
	Recv() (*NumSeries, error)
	grpc.ServerStream
}

type calculatorServiceSumSeriesServer struct {
	grpc.ServerStream
}

func (x *calculatorServiceSumSeriesServer) SendAndClose(m *SeriesSum) error {
	return x.ServerStream.SendMsg(m)
}

func (x *calculatorServiceSumSeriesServer) Recv() (*NumSeries, error) {
	m := new(NumSeries)
	if err := x.ServerStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

var _CalculatorService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "calculator.CalculatorService",
	HandlerType: (*CalculatorServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Sum",
			Handler:    _CalculatorService_Sum_Handler,
		},
	},
	Streams: []grpc.StreamDesc{
		{
			StreamName:    "PrimeNumberDecomposition",
			Handler:       _CalculatorService_PrimeNumberDecomposition_Handler,
			ServerStreams: true,
		},
		{
			StreamName:    "SumSeries",
			Handler:       _CalculatorService_SumSeries_Handler,
			ClientStreams: true,
		},
	},
	Metadata: "calculator/calcpb/calculator.proto",
}
